

================================================================
== Vivado HLS Report for 'example_Block_proc'
================================================================
* Date:           Sat Aug 24 02:41:42 2019

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        example_hls
* Solution:       solution1
* Product family: kintexu
* Target device:  xcku060-ffva1156-1l-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.60|      2.14|        0.57|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    1|    1|    1|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 2
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
* FSM state operations: 

 <State 1>: 2.14ns
ST_1: stg_3 [1/1] 0.00ns
newFuncRoot:0  call void (...)* @_ssdm_op_SpecInterface(i12* %mlx2sbu_V_user_V, i3* %mlx2sbu_V_id_V, i1* %mlx2sbu_V_last_V, i32* %mlx2sbu_V_keep_V, i256* %mlx2sbu_V_data_V, [5 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str)

ST_1: stg_4 [1/1] 0.00ns
newFuncRoot:1  call void (...)* @_ssdm_op_SpecInterface(i12* %sbu2mlx_V_user_V, i3* %sbu2mlx_V_id_V, i1* %sbu2mlx_V_last_V, i32* %sbu2mlx_V_keep_V, i256* %sbu2mlx_V_data_V, [5 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str)

ST_1: stg_5 [1/1] 0.00ns
newFuncRoot:2  call void (...)* @_ssdm_op_SpecInterface(i12* %sbu2prt_cx_V_user_V, i3* %sbu2prt_cx_V_id_V, i1* %sbu2prt_cx_V_last_V, i32* %sbu2prt_cx_V_keep_V, i256* %sbu2prt_cx_V_data_V, [5 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str)

ST_1: stg_6 [1/1] 0.00ns
newFuncRoot:3  call void (...)* @_ssdm_op_SpecInterface(i12* %sbu2prt_nw_V_user_V, i3* %sbu2prt_nw_V_id_V, i1* %sbu2prt_nw_V_last_V, i32* %sbu2prt_nw_V_keep_V, i256* %sbu2prt_nw_V_data_V, [5 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str)

ST_1: stg_7 [1/1] 0.00ns
newFuncRoot:4  call void (...)* @_ssdm_op_SpecInterface(i12* %prt_cx2sbu_V_user_V, i3* %prt_cx2sbu_V_id_V, i1* %prt_cx2sbu_V_last_V, i32* %prt_cx2sbu_V_keep_V, i256* %prt_cx2sbu_V_data_V, [5 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str)

ST_1: stg_8 [1/1] 0.00ns
newFuncRoot:5  call void (...)* @_ssdm_op_SpecInterface(i12* %prt_nw2sbu_V_user_V, i3* %prt_nw2sbu_V_id_V, i1* %prt_nw2sbu_V_last_V, i32* %prt_nw2sbu_V_keep_V, i256* %prt_nw2sbu_V_data_V, [5 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str)

ST_1: DetectState_load [1/1] 0.00ns
newFuncRoot:6  %DetectState_load = load i2* @DetectState, align 1

ST_1: reply_load [1/1] 0.00ns
newFuncRoot:7  %reply_load = load i1* @reply, align 1

ST_1: tmp_data_V [1/1] 0.00ns
newFuncRoot:8  %tmp_data_V = load i256* @prev_buff_data_V, align 16

ST_1: tmp_keep_V [1/1] 0.00ns
newFuncRoot:9  %tmp_keep_V = load i32* @prev_buff_keep_V, align 4

ST_1: tmp_last_V [1/1] 0.00ns
newFuncRoot:10  %tmp_last_V = load i1* @prev_buff_last_V, align 1

ST_1: tmp_id_V [1/1] 0.00ns
newFuncRoot:11  %tmp_id_V = load i3* @prev_buff_id_V, align 1

ST_1: tmp_user_V [1/1] 0.00ns
newFuncRoot:12  %tmp_user_V = load i12* @prev_buff_user_V, align 2

ST_1: stg_16 [1/1] 1.30ns
newFuncRoot:13  switch i2 %DetectState_load, label %axi_stream_pass.exit29 [
    i2 0, label %0
    i2 1, label %1
    i2 -2, label %2
    i2 -1, label %3
  ]

ST_1: stg_17 [1/1] 0.00ns
:0  br i1 %reply_load, label %11, label %12

ST_1: stg_18 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %sbu2prt_cx_V_data_V, i32* %sbu2prt_cx_V_keep_V, i1* %sbu2prt_cx_V_last_V, i3* %sbu2prt_cx_V_id_V, i12* %sbu2prt_cx_V_user_V, i256 %tmp_data_V, i32 %tmp_keep_V, i1 %tmp_last_V, i3 %tmp_id_V, i12 %tmp_user_V)

ST_1: stg_19 [1/1] 0.00ns
:1  br label %21

ST_1: stg_20 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %sbu2prt_nw_V_data_V, i32* %sbu2prt_nw_V_keep_V, i1* %sbu2prt_nw_V_last_V, i3* %sbu2prt_nw_V_id_V, i12* %sbu2prt_nw_V_user_V, i256 %tmp_data_V, i32 %tmp_keep_V, i1 %tmp_last_V, i3 %tmp_id_V, i12 %tmp_user_V)

ST_1: stg_21 [1/1] 0.00ns
:1  br label %21

ST_1: stg_22 [1/1] 1.30ns
:0  br label %axi_stream_pass.exit29

ST_1: tmp_2 [1/1] 0.00ns
:0  %tmp_2 = call i1 @_ssdm_op_NbReadReq.axis.i256P.i32P.i1P.i3P.i12P(i256* %prt_nw2sbu_V_data_V, i32* %prt_nw2sbu_V_keep_V, i1* %prt_nw2sbu_V_last_V, i3* %prt_nw2sbu_V_id_V, i12* %prt_nw2sbu_V_user_V, i32 1)

ST_1: stg_24 [1/1] 1.30ns
:1  br i1 %tmp_2, label %10, label %axi_stream_pass.exit29

ST_1: empty_20 [1/1] 0.00ns
:0  %empty_20 = call { i256, i32, i1, i3, i12 } @_ssdm_op_Read.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %prt_nw2sbu_V_data_V, i32* %prt_nw2sbu_V_keep_V, i1* %prt_nw2sbu_V_last_V, i3* %prt_nw2sbu_V_id_V, i12* %prt_nw2sbu_V_user_V)

ST_1: tmp_data_V_8 [1/1] 0.00ns
:1  %tmp_data_V_8 = extractvalue { i256, i32, i1, i3, i12 } %empty_20, 0

ST_1: tmp_keep_V_8 [1/1] 0.00ns
:2  %tmp_keep_V_8 = extractvalue { i256, i32, i1, i3, i12 } %empty_20, 1

ST_1: tmp_last_V_8 [1/1] 0.00ns
:3  %tmp_last_V_8 = extractvalue { i256, i32, i1, i3, i12 } %empty_20, 2

ST_1: tmp_id_V_8 [1/1] 0.00ns
:4  %tmp_id_V_8 = extractvalue { i256, i32, i1, i3, i12 } %empty_20, 3

ST_1: tmp_user_V_8 [1/1] 0.00ns
:5  %tmp_user_V_8 = extractvalue { i256, i32, i1, i3, i12 } %empty_20, 4

ST_1: stg_31 [1/1] 0.00ns
:6  br i1 %reply_load, label %19, label %20

ST_1: stg_32 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %sbu2prt_cx_V_data_V, i32* %sbu2prt_cx_V_keep_V, i1* %sbu2prt_cx_V_last_V, i3* %sbu2prt_cx_V_id_V, i12* %sbu2prt_cx_V_user_V, i256 %tmp_data_V, i32 %tmp_keep_V, i1 %tmp_last_V, i3 %tmp_id_V, i12 %tmp_user_V)

ST_1: stg_33 [1/1] 0.00ns
:1  br label %27

ST_1: stg_34 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %sbu2prt_nw_V_data_V, i32* %sbu2prt_nw_V_keep_V, i1* %sbu2prt_nw_V_last_V, i3* %sbu2prt_nw_V_id_V, i12* %sbu2prt_nw_V_user_V, i256 %tmp_data_V, i32 %tmp_keep_V, i1 %tmp_last_V, i3 %tmp_id_V, i12 %tmp_user_V)

ST_1: stg_35 [1/1] 0.00ns
:1  br label %27

ST_1: p_s [1/1] 0.84ns
:0  %p_s = select i1 %tmp_last_V_8, i2 -1, i2 -2

ST_1: stg_37 [1/1] 1.30ns
:1  br label %axi_stream_pass.exit29

ST_1: tmp_1 [1/1] 0.00ns
:0  %tmp_1 = call i1 @_ssdm_op_NbReadReq.axis.i256P.i32P.i1P.i3P.i12P(i256* %prt_nw2sbu_V_data_V, i32* %prt_nw2sbu_V_keep_V, i1* %prt_nw2sbu_V_last_V, i3* %prt_nw2sbu_V_id_V, i12* %prt_nw2sbu_V_user_V, i32 1)

ST_1: stg_39 [1/1] 1.30ns
:1  br i1 %tmp_1, label %9, label %axi_stream_pass.exit29

ST_1: empty_19 [1/1] 0.00ns
:0  %empty_19 = call { i256, i32, i1, i3, i12 } @_ssdm_op_Read.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %prt_nw2sbu_V_data_V, i32* %prt_nw2sbu_V_keep_V, i1* %prt_nw2sbu_V_last_V, i3* %prt_nw2sbu_V_id_V, i12* %prt_nw2sbu_V_user_V)

ST_1: tmp_data_V_7 [1/1] 0.00ns
:1  %tmp_data_V_7 = extractvalue { i256, i32, i1, i3, i12 } %empty_19, 0

ST_1: tmp_keep_V_7 [1/1] 0.00ns
:2  %tmp_keep_V_7 = extractvalue { i256, i32, i1, i3, i12 } %empty_19, 1

ST_1: tmp_last_V_7 [1/1] 0.00ns
:3  %tmp_last_V_7 = extractvalue { i256, i32, i1, i3, i12 } %empty_19, 2

ST_1: tmp_id_V_7 [1/1] 0.00ns
:4  %tmp_id_V_7 = extractvalue { i256, i32, i1, i3, i12 } %empty_19, 3

ST_1: tmp_user_V_7 [1/1] 0.00ns
:5  %tmp_user_V_7 = extractvalue { i256, i32, i1, i3, i12 } %empty_19, 4

ST_1: p_Result_11 [1/1] 0.00ns
:6  %p_Result_11 = call i256 @llvm.part.set.i256.i16(i256 %tmp_data_V_7, i16 0, i32 176, i32 191)

ST_1: p_Result_12 [1/1] 0.00ns
:7  %p_Result_12 = call i256 @llvm.part.set.i256.i16(i256 %p_Result_11, i16 259, i32 240, i32 255)

ST_1: stg_48 [1/1] 0.00ns
:8  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %sbu2prt_nw_V_data_V, i32* %sbu2prt_nw_V_keep_V, i1* %sbu2prt_nw_V_last_V, i3* %sbu2prt_nw_V_id_V, i12* %sbu2prt_nw_V_user_V, i256 %tmp_data_V, i32 %tmp_keep_V, i1 %tmp_last_V, i3 %tmp_id_V, i12 %tmp_user_V)

ST_1: storemerge_i1 [1/1] 0.84ns
:9  %storemerge_i1 = select i1 %tmp_last_V_7, i2 -1, i2 -2

ST_1: stg_50 [1/1] 1.30ns
:10  br label %axi_stream_pass.exit29

ST_1: tmp [1/1] 0.00ns
:0  %tmp = call i1 @_ssdm_op_NbReadReq.axis.i256P.i32P.i1P.i3P.i12P(i256* %prt_nw2sbu_V_data_V, i32* %prt_nw2sbu_V_keep_V, i1* %prt_nw2sbu_V_last_V, i3* %prt_nw2sbu_V_id_V, i12* %prt_nw2sbu_V_user_V, i32 1)

ST_1: stg_52 [1/1] 1.30ns
:1  br i1 %tmp, label %8, label %axi_stream_pass.exit29

ST_1: empty [1/1] 0.00ns
:0  %empty = call { i256, i32, i1, i3, i12 } @_ssdm_op_Read.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %prt_nw2sbu_V_data_V, i32* %prt_nw2sbu_V_keep_V, i1* %prt_nw2sbu_V_last_V, i3* %prt_nw2sbu_V_id_V, i12* %prt_nw2sbu_V_user_V)

ST_1: tmp_data_V_6 [1/1] 0.00ns
:1  %tmp_data_V_6 = extractvalue { i256, i32, i1, i3, i12 } %empty, 0

ST_1: tmp_keep_V_6 [1/1] 0.00ns
:2  %tmp_keep_V_6 = extractvalue { i256, i32, i1, i3, i12 } %empty, 1

ST_1: tmp_last_V_6 [1/1] 0.00ns
:3  %tmp_last_V_6 = extractvalue { i256, i32, i1, i3, i12 } %empty, 2

ST_1: tmp_id_V_6 [1/1] 0.00ns
:4  %tmp_id_V_6 = extractvalue { i256, i32, i1, i3, i12 } %empty, 3

ST_1: tmp_user_V_6 [1/1] 0.00ns
:5  %tmp_user_V_6 = extractvalue { i256, i32, i1, i3, i12 } %empty, 4

ST_1: p_Result_s [1/1] 0.00ns
:6  %p_Result_s = call i16 @_ssdm_op_PartSelect.i16.i256.i32.i32(i256 %tmp_data_V_6, i32 144, i32 159)

ST_1: tmp_5 [1/1] 1.55ns
:7  %tmp_5 = icmp eq i16 %p_Result_s, 2048

ST_1: stg_61 [1/1] 0.00ns
:8  br i1 %tmp_5, label %18, label %._crit_edge130.i17

ST_1: p_Result_3 [1/1] 0.00ns
:0  %p_Result_3 = call i8 @_ssdm_op_PartSelect.i8.i256.i32.i32(i256 %tmp_data_V_6, i32 64, i32 71)

ST_1: tmp_s [1/1] 1.38ns
:1  %tmp_s = icmp eq i8 %p_Result_3, 17

ST_1: stg_64 [1/1] 0.00ns
:2  br i1 %tmp_s, label %26, label %._crit_edge130.i17

ST_1: stg_65 [1/1] 1.30ns
._crit_edge130.i17:0  br label %axi_stream_pass.exit29

ST_1: p_Result_15 [1/1] 0.00ns
:0  %p_Result_15 = call i256 @llvm.part.set.i256.i32(i256 %tmp_data_V_6, i32 -1062731518, i32 16, i32 47)

ST_1: p_Result_16 [1/1] 0.00ns
:1  %p_Result_16 = call i256 @_ssdm_op_PartSet.i256.i256.i96.i32.i32(i256 %p_Result_15, i96 11308328290305249705890216434, i32 160, i32 255)

ST_1: stg_68 [1/1] 1.30ns
:2  br label %axi_stream_pass.exit29


 <State 2>: 2.14ns
ST_2: DetectState_flag [1/1] 0.00ns
axi_stream_pass.exit29:0  %DetectState_flag = phi i1 [ false, %newFuncRoot ], [ true, %21 ], [ false, %2 ], [ true, %9 ], [ false, %1 ], [ false, %0 ], [ true, %._crit_edge130.i17 ], [ true, %26 ], [ %tmp_last_V_8, %27 ]

ST_2: reply_flag_1 [1/1] 0.00ns
axi_stream_pass.exit29:1  %reply_flag_1 = phi i1 [ false, %newFuncRoot ], [ true, %21 ], [ false, %2 ], [ false, %9 ], [ false, %1 ], [ false, %0 ], [ false, %._crit_edge130.i17 ], [ true, %26 ], [ false, %27 ]

ST_2: reply_loc_1 [1/1] 0.00ns
axi_stream_pass.exit29:2  %reply_loc_1 = phi i1 [ %reply_load, %newFuncRoot ], [ false, %21 ], [ %reply_load, %2 ], [ %reply_load, %9 ], [ %reply_load, %1 ], [ %reply_load, %0 ], [ %reply_load, %._crit_edge130.i17 ], [ true, %26 ], [ %reply_load, %27 ]

ST_2: prev_buff_data_V_flag [1/1] 0.00ns
axi_stream_pass.exit29:3  %prev_buff_data_V_flag = phi i1 [ false, %newFuncRoot ], [ false, %21 ], [ false, %2 ], [ true, %9 ], [ false, %1 ], [ false, %0 ], [ true, %._crit_edge130.i17 ], [ true, %26 ], [ true, %27 ]

ST_2: tmp_data_V_4 [1/1] 0.00ns
axi_stream_pass.exit29:4  %tmp_data_V_4 = phi i256 [ %tmp_data_V, %newFuncRoot ], [ %tmp_data_V, %21 ], [ %tmp_data_V, %2 ], [ %p_Result_12, %9 ], [ %tmp_data_V, %1 ], [ %tmp_data_V, %0 ], [ %tmp_data_V_6, %._crit_edge130.i17 ], [ %p_Result_16, %26 ], [ %tmp_data_V_8, %27 ]

ST_2: tmp_keep_V_4 [1/1] 0.00ns
axi_stream_pass.exit29:5  %tmp_keep_V_4 = phi i32 [ %tmp_keep_V, %newFuncRoot ], [ %tmp_keep_V, %21 ], [ %tmp_keep_V, %2 ], [ %tmp_keep_V_7, %9 ], [ %tmp_keep_V, %1 ], [ %tmp_keep_V, %0 ], [ %tmp_keep_V_6, %._crit_edge130.i17 ], [ %tmp_keep_V_6, %26 ], [ %tmp_keep_V_8, %27 ]

ST_2: tmp_last_V_4 [1/1] 0.00ns
axi_stream_pass.exit29:6  %tmp_last_V_4 = phi i1 [ %tmp_last_V, %newFuncRoot ], [ %tmp_last_V, %21 ], [ %tmp_last_V, %2 ], [ %tmp_last_V_7, %9 ], [ %tmp_last_V, %1 ], [ %tmp_last_V, %0 ], [ %tmp_last_V_6, %._crit_edge130.i17 ], [ %tmp_last_V_6, %26 ], [ %tmp_last_V_8, %27 ]

ST_2: tmp_id_V_4 [1/1] 0.00ns
axi_stream_pass.exit29:7  %tmp_id_V_4 = phi i3 [ %tmp_id_V, %newFuncRoot ], [ %tmp_id_V, %21 ], [ %tmp_id_V, %2 ], [ %tmp_id_V_7, %9 ], [ %tmp_id_V, %1 ], [ %tmp_id_V, %0 ], [ %tmp_id_V_6, %._crit_edge130.i17 ], [ %tmp_id_V_6, %26 ], [ %tmp_id_V_8, %27 ]

ST_2: tmp_user_V_4 [1/1] 0.00ns
axi_stream_pass.exit29:8  %tmp_user_V_4 = phi i12 [ %tmp_user_V, %newFuncRoot ], [ %tmp_user_V, %21 ], [ %tmp_user_V, %2 ], [ %tmp_user_V_7, %9 ], [ %tmp_user_V, %1 ], [ %tmp_user_V, %0 ], [ %tmp_user_V_6, %._crit_edge130.i17 ], [ %tmp_user_V_6, %26 ], [ %tmp_user_V_8, %27 ]

ST_2: DetectState_load_1 [1/1] 0.00ns
axi_stream_pass.exit29:9  %DetectState_load_1 = phi i2 [ %DetectState_load, %newFuncRoot ], [ 0, %21 ], [ -2, %2 ], [ %storemerge_i1, %9 ], [ 1, %1 ], [ 0, %0 ], [ -2, %._crit_edge130.i17 ], [ 1, %26 ], [ %p_s, %27 ]

ST_2: stg_79 [1/1] 1.30ns
axi_stream_pass.exit29:10  switch i2 %DetectState_load_1, label %axi_stream_pass.exit28 [
    i2 0, label %4
    i2 1, label %5
    i2 -2, label %6
    i2 -1, label %7
  ]

ST_2: stg_80 [1/1] 0.00ns
:0  br i1 %reply_loc_1, label %16, label %17

ST_2: stg_81 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %sbu2prt_nw_V_data_V, i32* %sbu2prt_nw_V_keep_V, i1* %sbu2prt_nw_V_last_V, i3* %sbu2prt_nw_V_id_V, i12* %sbu2prt_nw_V_user_V, i256 %tmp_data_V_4, i32 %tmp_keep_V_4, i1 %tmp_last_V_4, i3 %tmp_id_V_4, i12 %tmp_user_V_4)

ST_2: stg_82 [1/1] 0.00ns
:1  br label %25

ST_2: stg_83 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %sbu2prt_cx_V_data_V, i32* %sbu2prt_cx_V_keep_V, i1* %sbu2prt_cx_V_last_V, i3* %sbu2prt_cx_V_id_V, i12* %sbu2prt_cx_V_user_V, i256 %tmp_data_V_4, i32 %tmp_keep_V_4, i1 %tmp_last_V_4, i3 %tmp_id_V_4, i12 %tmp_user_V_4)

ST_2: stg_84 [1/1] 0.00ns
:1  br label %25

ST_2: stg_85 [1/1] 1.30ns
:0  br label %axi_stream_pass.exit28

ST_2: tmp_6 [1/1] 0.00ns
:0  %tmp_6 = call i1 @_ssdm_op_NbReadReq.axis.i256P.i32P.i1P.i3P.i12P(i256* %prt_cx2sbu_V_data_V, i32* %prt_cx2sbu_V_keep_V, i1* %prt_cx2sbu_V_last_V, i3* %prt_cx2sbu_V_id_V, i12* %prt_cx2sbu_V_user_V, i32 1)

ST_2: stg_87 [1/1] 1.30ns
:1  br i1 %tmp_6, label %15, label %axi_stream_pass.exit28

ST_2: empty_23 [1/1] 0.00ns
:0  %empty_23 = call { i256, i32, i1, i3, i12 } @_ssdm_op_Read.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %prt_cx2sbu_V_data_V, i32* %prt_cx2sbu_V_keep_V, i1* %prt_cx2sbu_V_last_V, i3* %prt_cx2sbu_V_id_V, i12* %prt_cx2sbu_V_user_V)

ST_2: tmp_data_V_11 [1/1] 0.00ns
:1  %tmp_data_V_11 = extractvalue { i256, i32, i1, i3, i12 } %empty_23, 0

ST_2: tmp_keep_V_11 [1/1] 0.00ns
:2  %tmp_keep_V_11 = extractvalue { i256, i32, i1, i3, i12 } %empty_23, 1

ST_2: tmp_last_V_11 [1/1] 0.00ns
:3  %tmp_last_V_11 = extractvalue { i256, i32, i1, i3, i12 } %empty_23, 2

ST_2: tmp_id_V_11 [1/1] 0.00ns
:4  %tmp_id_V_11 = extractvalue { i256, i32, i1, i3, i12 } %empty_23, 3

ST_2: tmp_user_V_11 [1/1] 0.00ns
:5  %tmp_user_V_11 = extractvalue { i256, i32, i1, i3, i12 } %empty_23, 4

ST_2: stg_94 [1/1] 0.00ns
:6  br i1 %reply_loc_1, label %23, label %24

ST_2: stg_95 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %sbu2prt_nw_V_data_V, i32* %sbu2prt_nw_V_keep_V, i1* %sbu2prt_nw_V_last_V, i3* %sbu2prt_nw_V_id_V, i12* %sbu2prt_nw_V_user_V, i256 %tmp_data_V_4, i32 %tmp_keep_V_4, i1 %tmp_last_V_4, i3 %tmp_id_V_4, i12 %tmp_user_V_4)

ST_2: stg_96 [1/1] 0.00ns
:1  br label %._crit_edge134.i

ST_2: stg_97 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %sbu2prt_cx_V_data_V, i32* %sbu2prt_cx_V_keep_V, i1* %sbu2prt_cx_V_last_V, i3* %sbu2prt_cx_V_id_V, i12* %sbu2prt_cx_V_user_V, i256 %tmp_data_V_4, i32 %tmp_keep_V_4, i1 %tmp_last_V_4, i3 %tmp_id_V_4, i12 %tmp_user_V_4)

ST_2: stg_98 [1/1] 0.00ns
:1  br label %._crit_edge134.i

ST_2: p_DetectState_flag [1/1] 0.84ns
._crit_edge134.i:0  %p_DetectState_flag = or i1 %tmp_last_V_11, %DetectState_flag

ST_2: p_DetectState_load_1 [1/1] 0.84ns
._crit_edge134.i:1  %p_DetectState_load_1 = select i1 %tmp_last_V_11, i2 -1, i2 -2

ST_2: stg_101 [1/1] 1.30ns
._crit_edge134.i:2  br label %axi_stream_pass.exit28

ST_2: tmp_4 [1/1] 0.00ns
:0  %tmp_4 = call i1 @_ssdm_op_NbReadReq.axis.i256P.i32P.i1P.i3P.i12P(i256* %prt_cx2sbu_V_data_V, i32* %prt_cx2sbu_V_keep_V, i1* %prt_cx2sbu_V_last_V, i3* %prt_cx2sbu_V_id_V, i12* %prt_cx2sbu_V_user_V, i32 1)

ST_2: stg_103 [1/1] 1.30ns
:1  br i1 %tmp_4, label %14, label %axi_stream_pass.exit28

ST_2: empty_22 [1/1] 0.00ns
:0  %empty_22 = call { i256, i32, i1, i3, i12 } @_ssdm_op_Read.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %prt_cx2sbu_V_data_V, i32* %prt_cx2sbu_V_keep_V, i1* %prt_cx2sbu_V_last_V, i3* %prt_cx2sbu_V_id_V, i12* %prt_cx2sbu_V_user_V)

ST_2: tmp_data_V_10 [1/1] 0.00ns
:1  %tmp_data_V_10 = extractvalue { i256, i32, i1, i3, i12 } %empty_22, 0

ST_2: tmp_keep_V_10 [1/1] 0.00ns
:2  %tmp_keep_V_10 = extractvalue { i256, i32, i1, i3, i12 } %empty_22, 1

ST_2: tmp_last_V_10 [1/1] 0.00ns
:3  %tmp_last_V_10 = extractvalue { i256, i32, i1, i3, i12 } %empty_22, 2

ST_2: tmp_id_V_10 [1/1] 0.00ns
:4  %tmp_id_V_10 = extractvalue { i256, i32, i1, i3, i12 } %empty_22, 3

ST_2: tmp_user_V_10 [1/1] 0.00ns
:5  %tmp_user_V_10 = extractvalue { i256, i32, i1, i3, i12 } %empty_22, 4

ST_2: p_Result_13 [1/1] 0.00ns
:6  %p_Result_13 = call i256 @llvm.part.set.i256.i16(i256 %tmp_data_V_10, i16 0, i32 176, i32 191)

ST_2: p_Result_14 [1/1] 0.00ns
:7  %p_Result_14 = call i256 @llvm.part.set.i256.i16(i256 %p_Result_13, i16 259, i32 240, i32 255)

ST_2: stg_112 [1/1] 0.00ns
:8  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %sbu2prt_cx_V_data_V, i32* %sbu2prt_cx_V_keep_V, i1* %sbu2prt_cx_V_last_V, i3* %sbu2prt_cx_V_id_V, i12* %sbu2prt_cx_V_user_V, i256 %tmp_data_V_4, i32 %tmp_keep_V_4, i1 %tmp_last_V_4, i3 %tmp_id_V_4, i12 %tmp_user_V_4)

ST_2: storemerge_i [1/1] 0.84ns
:9  %storemerge_i = select i1 %tmp_last_V_10, i2 -1, i2 -2

ST_2: stg_114 [1/1] 1.30ns
:10  br label %axi_stream_pass.exit28

ST_2: tmp_3 [1/1] 0.00ns
:0  %tmp_3 = call i1 @_ssdm_op_NbReadReq.axis.i256P.i32P.i1P.i3P.i12P(i256* %prt_cx2sbu_V_data_V, i32* %prt_cx2sbu_V_keep_V, i1* %prt_cx2sbu_V_last_V, i3* %prt_cx2sbu_V_id_V, i12* %prt_cx2sbu_V_user_V, i32 1)

ST_2: stg_116 [1/1] 1.30ns
:1  br i1 %tmp_3, label %13, label %axi_stream_pass.exit28

ST_2: empty_21 [1/1] 0.00ns
:0  %empty_21 = call { i256, i32, i1, i3, i12 } @_ssdm_op_Read.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %prt_cx2sbu_V_data_V, i32* %prt_cx2sbu_V_keep_V, i1* %prt_cx2sbu_V_last_V, i3* %prt_cx2sbu_V_id_V, i12* %prt_cx2sbu_V_user_V)

ST_2: tmp_data_V_9 [1/1] 0.00ns
:1  %tmp_data_V_9 = extractvalue { i256, i32, i1, i3, i12 } %empty_21, 0

ST_2: tmp_keep_V_9 [1/1] 0.00ns
:2  %tmp_keep_V_9 = extractvalue { i256, i32, i1, i3, i12 } %empty_21, 1

ST_2: tmp_last_V_9 [1/1] 0.00ns
:3  %tmp_last_V_9 = extractvalue { i256, i32, i1, i3, i12 } %empty_21, 2

ST_2: tmp_id_V_9 [1/1] 0.00ns
:4  %tmp_id_V_9 = extractvalue { i256, i32, i1, i3, i12 } %empty_21, 3

ST_2: tmp_user_V_9 [1/1] 0.00ns
:5  %tmp_user_V_9 = extractvalue { i256, i32, i1, i3, i12 } %empty_21, 4

ST_2: p_Result_9 [1/1] 0.00ns
:6  %p_Result_9 = call i16 @_ssdm_op_PartSelect.i16.i256.i32.i32(i256 %tmp_data_V_9, i32 144, i32 159)

ST_2: tmp_8 [1/1] 1.55ns
:7  %tmp_8 = icmp eq i16 %p_Result_9, 2048

ST_2: stg_125 [1/1] 0.00ns
:8  br i1 %tmp_8, label %22, label %._crit_edge130.i

ST_2: p_Result_s_24 [1/1] 0.00ns
:0  %p_Result_s_24 = call i8 @_ssdm_op_PartSelect.i8.i256.i32.i32(i256 %tmp_data_V_9, i32 64, i32 71)

ST_2: tmp_9 [1/1] 1.38ns
:1  %tmp_9 = icmp eq i8 %p_Result_s_24, 17

ST_2: stg_128 [1/1] 0.00ns
:2  br i1 %tmp_9, label %28, label %._crit_edge130.i

ST_2: stg_129 [1/1] 1.30ns
._crit_edge130.i:0  br label %axi_stream_pass.exit28

ST_2: p_Result_17 [1/1] 0.00ns
:0  %p_Result_17 = call i256 @llvm.part.set.i256.i32(i256 %tmp_data_V_9, i32 -1062731518, i32 16, i32 47)

ST_2: p_Result_18 [1/1] 0.00ns
:1  %p_Result_18 = call i256 @_ssdm_op_PartSet.i256.i256.i96.i32.i32(i256 %p_Result_17, i96 11308328290305249705890216434, i32 160, i32 255)

ST_2: stg_132 [1/1] 1.30ns
:2  br label %axi_stream_pass.exit28

ST_2: DetectState_flag_5 [1/1] 0.00ns
axi_stream_pass.exit28:0  %DetectState_flag_5 = phi i1 [ %DetectState_flag, %axi_stream_pass.exit29 ], [ true, %25 ], [ %DetectState_flag, %4 ], [ true, %._crit_edge130.i ], [ true, %28 ], [ true, %14 ], [ %DetectState_flag, %5 ], [ %p_DetectState_flag, %._crit_edge134.i ], [ %DetectState_flag, %6 ]

ST_2: DetectState_new_5 [1/1] 0.00ns
axi_stream_pass.exit28:1  %DetectState_new_5 = phi i2 [ %DetectState_load_1, %axi_stream_pass.exit29 ], [ 0, %25 ], [ 0, %4 ], [ -2, %._crit_edge130.i ], [ 1, %28 ], [ %storemerge_i, %14 ], [ 1, %5 ], [ %p_DetectState_load_1, %._crit_edge134.i ], [ -2, %6 ]

ST_2: reply_flag_4 [1/1] 0.00ns
axi_stream_pass.exit28:2  %reply_flag_4 = phi i1 [ %reply_flag_1, %axi_stream_pass.exit29 ], [ true, %25 ], [ %reply_flag_1, %4 ], [ %reply_flag_1, %._crit_edge130.i ], [ true, %28 ], [ %reply_flag_1, %14 ], [ %reply_flag_1, %5 ], [ %reply_flag_1, %._crit_edge134.i ], [ %reply_flag_1, %6 ]

ST_2: reply_new_4 [1/1] 0.00ns
axi_stream_pass.exit28:3  %reply_new_4 = phi i1 [ %prev_buff_data_V_flag, %axi_stream_pass.exit29 ], [ false, %25 ], [ %prev_buff_data_V_flag, %4 ], [ %prev_buff_data_V_flag, %._crit_edge130.i ], [ true, %28 ], [ %prev_buff_data_V_flag, %14 ], [ %prev_buff_data_V_flag, %5 ], [ %prev_buff_data_V_flag, %._crit_edge134.i ], [ %prev_buff_data_V_flag, %6 ]

ST_2: prev_buff_data_V_flag_4 [1/1] 0.00ns
axi_stream_pass.exit28:4  %prev_buff_data_V_flag_4 = phi i1 [ %prev_buff_data_V_flag, %axi_stream_pass.exit29 ], [ %prev_buff_data_V_flag, %25 ], [ %prev_buff_data_V_flag, %4 ], [ true, %._crit_edge130.i ], [ true, %28 ], [ true, %14 ], [ %prev_buff_data_V_flag, %5 ], [ true, %._crit_edge134.i ], [ %prev_buff_data_V_flag, %6 ]

ST_2: prev_buff_data_V_new_4 [1/1] 0.00ns
axi_stream_pass.exit28:5  %prev_buff_data_V_new_4 = phi i256 [ %tmp_data_V_4, %axi_stream_pass.exit29 ], [ %tmp_data_V_4, %25 ], [ %tmp_data_V_4, %4 ], [ %tmp_data_V_9, %._crit_edge130.i ], [ %p_Result_18, %28 ], [ %p_Result_14, %14 ], [ %tmp_data_V_4, %5 ], [ %tmp_data_V_11, %._crit_edge134.i ], [ %tmp_data_V_4, %6 ]

ST_2: prev_buff_keep_V_new_4 [1/1] 0.00ns
axi_stream_pass.exit28:6  %prev_buff_keep_V_new_4 = phi i32 [ %tmp_keep_V_4, %axi_stream_pass.exit29 ], [ %tmp_keep_V_4, %25 ], [ %tmp_keep_V_4, %4 ], [ %tmp_keep_V_9, %._crit_edge130.i ], [ %tmp_keep_V_9, %28 ], [ %tmp_keep_V_10, %14 ], [ %tmp_keep_V_4, %5 ], [ %tmp_keep_V_11, %._crit_edge134.i ], [ %tmp_keep_V_4, %6 ]

ST_2: prev_buff_last_V_new_4 [1/1] 0.00ns
axi_stream_pass.exit28:7  %prev_buff_last_V_new_4 = phi i1 [ %tmp_last_V_4, %axi_stream_pass.exit29 ], [ %tmp_last_V_4, %25 ], [ %tmp_last_V_4, %4 ], [ %tmp_last_V_9, %._crit_edge130.i ], [ %tmp_last_V_9, %28 ], [ %tmp_last_V_10, %14 ], [ %tmp_last_V_4, %5 ], [ %tmp_last_V_11, %._crit_edge134.i ], [ %tmp_last_V_4, %6 ]

ST_2: prev_buff_id_V_new_4 [1/1] 0.00ns
axi_stream_pass.exit28:8  %prev_buff_id_V_new_4 = phi i3 [ %tmp_id_V_4, %axi_stream_pass.exit29 ], [ %tmp_id_V_4, %25 ], [ %tmp_id_V_4, %4 ], [ %tmp_id_V_9, %._crit_edge130.i ], [ %tmp_id_V_9, %28 ], [ %tmp_id_V_10, %14 ], [ %tmp_id_V_4, %5 ], [ %tmp_id_V_11, %._crit_edge134.i ], [ %tmp_id_V_4, %6 ]

ST_2: prev_buff_user_V_new_4 [1/1] 0.00ns
axi_stream_pass.exit28:9  %prev_buff_user_V_new_4 = phi i12 [ %tmp_user_V_4, %axi_stream_pass.exit29 ], [ %tmp_user_V_4, %25 ], [ %tmp_user_V_4, %4 ], [ %tmp_user_V_9, %._crit_edge130.i ], [ %tmp_user_V_9, %28 ], [ %tmp_user_V_10, %14 ], [ %tmp_user_V_4, %5 ], [ %tmp_user_V_11, %._crit_edge134.i ], [ %tmp_user_V_4, %6 ]

ST_2: stg_143 [1/1] 0.00ns
axi_stream_pass.exit28:10  call fastcc void @example_axi_stream_pass_alt(i256* %mlx2sbu_V_data_V, i32* %mlx2sbu_V_keep_V, i1* %mlx2sbu_V_last_V, i3* %mlx2sbu_V_id_V, i12* %mlx2sbu_V_user_V, i256* %sbu2mlx_V_data_V, i32* %sbu2mlx_V_keep_V, i1* %sbu2mlx_V_last_V, i3* %sbu2mlx_V_id_V, i12* %sbu2mlx_V_user_V)

ST_2: stg_144 [1/1] 0.00ns
axi_stream_pass.exit28:11  br i1 %prev_buff_data_V_flag_4, label %mergeST25, label %axi_stream_pass.exit.new18

ST_2: stg_145 [1/1] 0.00ns
mergeST25:0  store i12 %prev_buff_user_V_new_4, i12* @prev_buff_user_V, align 2

ST_2: stg_146 [1/1] 0.00ns
mergeST25:1  store i3 %prev_buff_id_V_new_4, i3* @prev_buff_id_V, align 1

ST_2: stg_147 [1/1] 0.00ns
mergeST25:2  store i1 %prev_buff_last_V_new_4, i1* @prev_buff_last_V, align 1

ST_2: stg_148 [1/1] 0.00ns
mergeST25:3  store i32 %prev_buff_keep_V_new_4, i32* @prev_buff_keep_V, align 4

ST_2: stg_149 [1/1] 0.00ns
mergeST25:4  store i256 %prev_buff_data_V_new_4, i256* @prev_buff_data_V, align 16

ST_2: stg_150 [1/1] 0.00ns
mergeST25:5  br label %axi_stream_pass.exit.new18

ST_2: stg_151 [1/1] 0.00ns
axi_stream_pass.exit.new18:0  br i1 %reply_flag_4, label %mergeST15, label %axi_stream_pass.exit.new16

ST_2: stg_152 [1/1] 0.00ns
mergeST15:0  store i1 %reply_new_4, i1* @reply, align 1

ST_2: stg_153 [1/1] 0.00ns
mergeST15:1  br label %axi_stream_pass.exit.new16

ST_2: stg_154 [1/1] 0.00ns
axi_stream_pass.exit.new16:0  br i1 %DetectState_flag_5, label %mergeST, label %axi_stream_pass.exit.new

ST_2: stg_155 [1/1] 0.00ns
mergeST:0  store i2 %DetectState_new_5, i2* @DetectState, align 1

ST_2: stg_156 [1/1] 0.00ns
mergeST:1  br label %axi_stream_pass.exit.new

ST_2: stg_157 [1/1] 0.00ns
axi_stream_pass.exit.new:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4.6ns, clock uncertainty: 0.575ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
