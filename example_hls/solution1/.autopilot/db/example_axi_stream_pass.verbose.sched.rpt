

================================================================
== Vivado HLS Report for 'example_axi_stream_pass'
================================================================
* Date:           Thu Aug 22 00:47:09 2019

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        example_hls
* Solution:       solution1
* Product family: kintexu
* Target device:  xcku060-ffva1156-1l-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.60|      1.92|        0.57|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    1|    1|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 1
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 2
* Pipeline: 1
  Pipeline-0: II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
* FSM state operations: 

 <State 1>: 1.92ns
ST_1: DetectState_load [1/1] 0.00ns
:2  %DetectState_load = load i2* @DetectState, align 1

ST_1: stg_4 [1/1] 1.24ns
:3  switch i2 %DetectState_load, label %._crit_edge [
    i2 0, label %1
    i2 1, label %3
    i2 -2, label %5
  ]

ST_1: empty_n_2 [1/1] 0.00ns
:0  %empty_n_2 = call { i1, i256, i32, i1, i3, i12 } @_ssdm_op_NbRead.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %In_V_data_V, i32* %In_V_keep_V, i1* %In_V_last_V, i3* %In_V_id_V, i12* %In_V_user_V)

ST_1: empty_n_5 [1/1] 0.00ns
:1  %empty_n_5 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_2, 0

ST_1: tmp_data_V_2 [1/1] 0.00ns
:2  %tmp_data_V_2 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_2, 1

ST_1: tmp_keep_V_2 [1/1] 0.00ns
:3  %tmp_keep_V_2 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_2, 2

ST_1: tmp_last_V_2 [1/1] 0.00ns
:4  %tmp_last_V_2 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_2, 3

ST_1: tmp_id_V_2 [1/1] 0.00ns
:5  %tmp_id_V_2 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_2, 4

ST_1: tmp_user_V_2 [1/1] 0.00ns
:6  %tmp_user_V_2 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_2, 5

ST_1: stg_12 [1/1] 0.00ns
:7  br i1 %empty_n_5, label %6, label %._crit_edge83

ST_1: stg_13 [1/1] 1.09ns
:0  store i2 0, i2* @DetectState, align 1

ST_1: empty_n_1 [1/1] 0.00ns
:0  %empty_n_1 = call { i1, i256, i32, i1, i3, i12 } @_ssdm_op_NbRead.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %In_V_data_V, i32* %In_V_keep_V, i1* %In_V_last_V, i3* %In_V_id_V, i12* %In_V_user_V)

ST_1: empty_n_4 [1/1] 0.00ns
:1  %empty_n_4 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_1, 0

ST_1: tmp_data_V [1/1] 0.00ns
:2  %tmp_data_V = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_1, 1

ST_1: tmp_keep_V_1 [1/1] 0.00ns
:3  %tmp_keep_V_1 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_1, 2

ST_1: tmp_last_V_1 [1/1] 0.00ns
:4  %tmp_last_V_1 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_1, 3

ST_1: tmp_id_V_1 [1/1] 0.00ns
:5  %tmp_id_V_1 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_1, 4

ST_1: tmp_user_V_1 [1/1] 0.00ns
:6  %tmp_user_V_1 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n_1, 5

ST_1: stg_21 [1/1] 0.00ns
:7  br i1 %empty_n_4, label %4, label %._crit_edge82

ST_1: storemerge [1/1] 0.84ns
:2  %storemerge = select i1 %tmp_last_V_1, i2 0, i2 -2

ST_1: stg_23 [1/1] 1.09ns
:3  store i2 %storemerge, i2* @DetectState, align 1

ST_1: empty_n [1/1] 0.00ns
:0  %empty_n = call { i1, i256, i32, i1, i3, i12 } @_ssdm_op_NbRead.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %In_V_data_V, i32* %In_V_keep_V, i1* %In_V_last_V, i3* %In_V_id_V, i12* %In_V_user_V)

ST_1: empty_n_3 [1/1] 0.00ns
:1  %empty_n_3 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n, 0

ST_1: tmp_data_V_4 [1/1] 0.00ns
:2  %tmp_data_V_4 = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n, 1

ST_1: tmp_keep_V [1/1] 0.00ns
:3  %tmp_keep_V = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n, 2

ST_1: tmp_last_V [1/1] 0.00ns
:4  %tmp_last_V = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n, 3

ST_1: tmp_id_V [1/1] 0.00ns
:5  %tmp_id_V = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n, 4

ST_1: tmp_user_V [1/1] 0.00ns
:6  %tmp_user_V = extractvalue { i1, i256, i32, i1, i3, i12 } %empty_n, 5

ST_1: stg_31 [1/1] 0.00ns
:7  br i1 %empty_n_3, label %2, label %._crit_edge81

ST_1: stg_32 [1/1] 1.09ns
:3  store i2 1, i2* @DetectState, align 1


 <State 2>: 0.00ns
ST_2: stg_33 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecInterface(i256* %Out_V_data_V, i32* %Out_V_keep_V, i1* %Out_V_last_V, i3* %Out_V_id_V, i12* %Out_V_user_V, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str) nounwind

ST_2: stg_34 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecInterface(i256* %In_V_data_V, i32* %In_V_keep_V, i1* %In_V_last_V, i3* %In_V_id_V, i12* %In_V_user_V, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str) nounwind

ST_2: stg_35 [1/1] 0.00ns
:0  br i1 %tmp_last_V_2, label %7, label %._crit_edge84

ST_2: stg_36 [1/1] 0.00ns
:1  br label %._crit_edge84

ST_2: stg_37 [1/1] 0.00ns
._crit_edge84:0  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %Out_V_data_V, i32* %Out_V_keep_V, i1* %Out_V_last_V, i3* %Out_V_id_V, i12* %Out_V_user_V, i256 %tmp_data_V_2, i32 %tmp_keep_V_2, i1 %tmp_last_V_2, i3 %tmp_id_V_2, i12 %tmp_user_V_2)

ST_2: stg_38 [1/1] 0.00ns
._crit_edge84:1  br label %._crit_edge83

ST_2: stg_39 [1/1] 0.00ns
._crit_edge83:0  br label %._crit_edge

ST_2: p_Result_3 [1/1] 0.00ns
:0  %p_Result_3 = call i256 @llvm.part.set.i256.i16(i256 %tmp_data_V, i16 0, i32 176, i32 191)

ST_2: p_Result_4 [1/1] 0.00ns
:1  %p_Result_4 = call i256 @llvm.part.set.i256.i16(i256 %p_Result_3, i16 259, i32 240, i32 255)

ST_2: stg_42 [1/1] 0.00ns
:4  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %Out_V_data_V, i32* %Out_V_keep_V, i1* %Out_V_last_V, i3* %Out_V_id_V, i12* %Out_V_user_V, i256 %p_Result_4, i32 %tmp_keep_V_1, i1 %tmp_last_V_1, i3 %tmp_id_V_1, i12 %tmp_user_V_1)

ST_2: stg_43 [1/1] 0.00ns
:5  br label %._crit_edge82

ST_2: stg_44 [1/1] 0.00ns
._crit_edge82:0  br label %._crit_edge

ST_2: p_Result_s [1/1] 0.00ns
:0  %p_Result_s = call i256 @llvm.part.set.i256.i48(i256 %tmp_data_V_4, i48 40175252601334, i32 208, i32 255)

ST_2: p_Result_1 [1/1] 0.00ns
:1  %p_Result_1 = call i256 @llvm.part.set.i256.i48(i256 %p_Result_s, i48 40175252601330, i32 160, i32 207)

ST_2: p_Result_2 [1/1] 0.00ns
:2  %p_Result_2 = call i256 @llvm.part.set.i256.i32(i256 %p_Result_1, i32 -1062731518, i32 16, i32 47)

ST_2: stg_48 [1/1] 0.00ns
:4  call void @_ssdm_op_Write.axis.volatile.i256P.i32P.i1P.i3P.i12P(i256* %Out_V_data_V, i32* %Out_V_keep_V, i1* %Out_V_last_V, i3* %Out_V_id_V, i12* %Out_V_user_V, i256 %p_Result_2, i32 %tmp_keep_V, i1 %tmp_last_V, i3 %tmp_id_V, i12 %tmp_user_V)

ST_2: stg_49 [1/1] 0.00ns
:5  br label %._crit_edge81

ST_2: stg_50 [1/1] 0.00ns
._crit_edge81:0  br label %._crit_edge

ST_2: stg_51 [1/1] 0.00ns
._crit_edge:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4.6ns, clock uncertainty: 0.575ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
