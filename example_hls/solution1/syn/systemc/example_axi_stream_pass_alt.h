// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _example_axi_stream_pass_alt_HH_
#define _example_axi_stream_pass_alt_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct example_axi_stream_pass_alt : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<256> > In_r_TDATA;
    sc_in< sc_logic > In_r_TVALID;
    sc_out< sc_logic > In_r_TREADY;
    sc_in< sc_lv<32> > In_r_TKEEP;
    sc_in< sc_lv<1> > In_r_TLAST;
    sc_in< sc_lv<3> > In_r_TID;
    sc_in< sc_lv<12> > In_r_TUSER;
    sc_out< sc_lv<256> > Out_r_TDATA;
    sc_out< sc_logic > Out_r_TVALID;
    sc_in< sc_logic > Out_r_TREADY;
    sc_out< sc_lv<32> > Out_r_TKEEP;
    sc_out< sc_lv<1> > Out_r_TLAST;
    sc_out< sc_lv<3> > Out_r_TID;
    sc_out< sc_lv<12> > Out_r_TUSER;
    sc_out< sc_logic > In_r_TDATA_blk_n;
    sc_out< sc_logic > Out_r_TDATA_blk_n;


    // Module declarations
    example_axi_stream_pass_alt(sc_module_name name);
    SC_HAS_PROCESS(example_axi_stream_pass_alt);

    ~example_axi_stream_pass_alt();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_18;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_36_p7;
    sc_signal< bool > ap_sig_55;
    sc_signal< sc_logic > ap_sig_ioackin_Out_r_TREADY;
    sc_signal< sc_logic > ap_reg_ioackin_Out_r_TREADY;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_In_r_TDATA_blk_n();
    void thread_In_r_TREADY();
    void thread_Out_r_TDATA();
    void thread_Out_r_TDATA_blk_n();
    void thread_Out_r_TID();
    void thread_Out_r_TKEEP();
    void thread_Out_r_TLAST();
    void thread_Out_r_TUSER();
    void thread_Out_r_TVALID();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_18();
    void thread_ap_sig_55();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_ioackin_Out_r_TREADY();
    void thread_tmp_nbreadreq_fu_36_p7();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
